
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper: check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.admin == true;
    }

    // USERS COLLECTION
    match /users/{userId} {
      // Any signed-in user can read profiles
      allow read: if request.auth != null;

      // Only the user can create their own profile
      allow create: if request.auth.uid == userId;

      // Updates allowed in these cases:
      allow update: if
        // Server-side operations (no auth) - for payment processing
        request.auth == null
        ||
        // User updates their own profile
        (request.auth != null && request.auth.uid == userId)
        ||
        // Admin updates
        (request.auth != null && isAdmin(request.auth.uid))
        ||
        // Backend rating updates (can be server-side or authenticated)
        (
          request.resource.data.rating != null &&
          request.resource.data.rating != resource.data.rating
        )
        ||
        (
          request.resource.data.reviewCount != null &&
          request.resource.data.reviewCount != resource.data.reviewCount
        )
        ||
        (
          request.resource.data.totalRating != null &&
          request.resource.data.totalRating != resource.data.totalRating
        );
    }

    // SESSIONS COLLECTION
    match /sessions/{sessionId} {
      allow read: if request.auth != null && (
                    resource.data.menteeId == request.auth.uid ||
                    resource.data.mentorId == request.auth.uid ||
                    isAdmin(request.auth.uid)
                 );

      // Only mentee can initiate
      allow create: if request.auth != null && request.auth.uid == request.resource.data.menteeId;

      // Allow update by involved parties or admin
      allow update: if request.auth != null && (
                      resource.data.menteeId == request.auth.uid ||
                      resource.data.mentorId == request.auth.uid ||
                      isAdmin(request.auth.uid)
                   );
    }

    // REVIEWS COLLECTION
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.menteeId;
      allow delete: if isAdmin(request.auth.uid);
      allow update: if false;
    }

    // TRANSACTIONS COLLECTION
    match /transactions/{transactionId} {
      allow read: if request.auth != null && (
                    resource.data.userId == request.auth.uid ||
                    isAdmin(request.auth.uid)
                 );

      // Allow creation by authenticated users OR server-side operations (no auth)
      allow create: if request.auth == null || request.auth != null;
      
      allow update, delete: if false;
    }

    // PAYMENTS COLLECTION
    match /payments/{paymentId} {
      allow read: if request.auth != null && (
                    resource.data.userId == request.auth.uid ||
                    isAdmin(request.auth.uid)
                 );

      allow create: if request.auth == null || (request.auth != null && request.auth.uid == request.resource.data.userId);
      allow update: if request.auth == null || (request.auth != null && resource.data.userId == request.auth.uid);
      allow delete: if false;

    }
  }
}
